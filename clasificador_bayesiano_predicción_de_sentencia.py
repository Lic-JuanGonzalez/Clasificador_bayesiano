# -*- coding: utf-8 -*-
"""Clasificador bayesiano-Predicci√≥n de sentencia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1COIe0cQG8_Sr1Fv8VFYNB1pUWmi3d57P
"""

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split

# Dataset
training_data = [
    ('I love this movie!', 'positive'),
    ('This movie is terrible!', 'negative'),
    ('The acting is great!', 'positive'),
    ('The plot is confusing.', 'negative'),
    ('The special effects are amazing!', 'positive'),
]

vectorizer = CountVectorizer()
features = vectorizer.fit_transform([data[0] for data in training_data])

# Definir etiqueta objetivo
labels = [data[1] for data in training_data]

X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2)

# Enrenamiento
classifier = MultinomialNB()
classifier.fit(X_train, y_train)

accuracy = classifier.score(X_test, y_test)
print('Accuracy:', accuracy)

# Prediccion de sentencia
new_sentence = 'This movie is okay.'
new_features = vectorizer.transform([new_sentence])
predicted_label = classifier.predict(new_features)[0]
print('Predicted sentiment:', predicted_label)